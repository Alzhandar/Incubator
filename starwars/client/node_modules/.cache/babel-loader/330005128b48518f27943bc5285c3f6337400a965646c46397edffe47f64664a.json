{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u0434\\u043C\\u0438\\u043D\\\\Desktop\\\\ProjectNfac\\\\starwars\\\\client\\\\src\\\\components\\\\Planets\\\\Planets.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Search from '../Search/Search';\nimport './Planets.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Planets = () => {\n  _s();\n  const [planets, setPlanets] = useState([]);\n  const [filteredPlanets, setFilteredPlanets] = useState([]);\n  useEffect(() => {\n    const fetchPlanets = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/planets');\n        setPlanets(response.data.results);\n        setFilteredPlanets(response.data.results);\n      } catch (error) {\n        console.error('Error fetching planets:', error);\n      }\n    };\n    fetchPlanets();\n  }, []);\n  const handleSearch = searchTerm => {\n    const filtered = planets.filter(planet => planet.name.toLowerCase().includes(searchTerm.toLowerCase()));\n    setFilteredPlanets(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Planets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: filteredPlanets.map((planet, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"name\",\n          children: planet.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"planet-rotation\",\n          children: [\"Rotation Period: \", planet.rotation_period, \" hours\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"planet-population\",\n          children: [\"Population: \", planet.population]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Planets, \"2bT7kbh4EBkK2xcQryCcgRzfKiw=\");\n_c = Planets;\nexport default Planets;\nvar _c;\n$RefreshReg$(_c, \"Planets\");","map":{"version":3,"names":["React","useState","useEffect","axios","Search","jsxDEV","_jsxDEV","Planets","_s","planets","setPlanets","filteredPlanets","setFilteredPlanets","fetchPlanets","response","get","data","results","error","console","handleSearch","searchTerm","filtered","filter","planet","name","toLowerCase","includes","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","map","index","rotation_period","population","_c","$RefreshReg$"],"sources":["C:/Users/Админ/Desktop/ProjectNfac/starwars/client/src/components/Planets/Planets.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Search from '../Search/Search';\r\nimport './Planets.css';  \r\n\r\nconst Planets = () => {\r\n  const [planets, setPlanets] = useState([]);\r\n  const [filteredPlanets, setFilteredPlanets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPlanets = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/planets');\r\n        setPlanets(response.data.results);\r\n        setFilteredPlanets(response.data.results);\r\n      } catch (error) {\r\n        console.error('Error fetching planets:', error);\r\n      }\r\n    };\r\n\r\n    fetchPlanets();\r\n  }, []);\r\n\r\n  const handleSearch = (searchTerm) => {\r\n    const filtered = planets.filter(planet =>\r\n      planet.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setFilteredPlanets(filtered);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"title\">Planets</h1>\r\n      <Search onSearch={handleSearch} />\r\n      <div className=\"container\">\r\n        {filteredPlanets.map((planet, index) => (\r\n          <div key={index} className=\"card\">\r\n            <h3 className=\"name\">{planet.name}</h3>\r\n            <p className=\"planet-rotation\">Rotation Period: {planet.rotation_period} hours</p>\r\n            <p className=\"planet-population\">Population: {planet.population}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Planets;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}