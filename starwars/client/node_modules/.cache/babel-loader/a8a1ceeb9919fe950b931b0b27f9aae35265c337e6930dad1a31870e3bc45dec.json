{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const Characters = () => {\n//   const [characters, setCharacters] = useState([]);\n\n//   useEffect(() => {\n//     const fetchCharacters = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/api/characters');\n//         setCharacters(response.data.results);\n//       } catch (error) {\n//         console.error('Error fetching characters:', error);\n//       }\n//     };\n\n//     fetchCharacters();\n//   }, []);\n\n//   return (\n//     <div>\n//       <h1>Characters</h1>\n//       {characters.map((character, index) => (\n//         <div key={index}>\n//           <h3>{character.name}</h3>\n//           <p>Gender: {character.gender}</p>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default Characters;","map":{"version":3,"names":[],"sources":["C:/Users/Админ/Desktop/ProjectNfac/starwars/client/src/components/Characters.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const Characters = () => {\r\n//   const [characters, setCharacters] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchCharacters = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:5000/api/characters');\r\n//         setCharacters(response.data.results);\r\n//       } catch (error) {\r\n//         console.error('Error fetching characters:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchCharacters();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Characters</h1>\r\n//       {characters.map((character, index) => (\r\n//         <div key={index}>\r\n//           <h3>{character.name}</h3>\r\n//           <p>Gender: {character.gender}</p>\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Characters;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}