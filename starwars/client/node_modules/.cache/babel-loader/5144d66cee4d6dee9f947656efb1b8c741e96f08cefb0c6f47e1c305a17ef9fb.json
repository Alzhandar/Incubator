{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u0434\\u043C\\u0438\\u043D\\\\Desktop\\\\ProjectNfac\\\\starwars\\\\client\\\\src\\\\components\\\\Planets.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Planets = () => {\n  _s();\n  const [planets, setPlanets] = useState([]);\n  useEffect(() => {\n    const fetchPlanets = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/planets');\n        setPlanets(response.data.results);\n      } catch (error) {\n        console.error('Error fetching planets:', error);\n      }\n    };\n    fetchPlanets();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Planets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), planets.map((planet, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: planet.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Population: \", planet.population]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Planets, \"von7Z1r3F3hAxnvSjQX44zZhN8s=\");\n_c = Planets;\nexport default Planets;\nvar _c;\n$RefreshReg$(_c, \"Planets\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Planets","_s","planets","setPlanets","fetchPlanets","response","get","data","results","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","planet","index","name","population","_c","$RefreshReg$"],"sources":["C:/Users/Админ/Desktop/ProjectNfac/starwars/client/src/components/Planets.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Planets = () => {\r\n  const [planets, setPlanets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPlanets = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/planets');\r\n        setPlanets(response.data.results);\r\n      } catch (error) {\r\n        console.error('Error fetching planets:', error);\r\n      }\r\n    };\r\n\r\n    fetchPlanets();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Planets</h1>\r\n      {planets.map((planet, index) => (\r\n        <div key={index}>\r\n          <h3>{planet.name}</h3>\r\n          <p>Population: {planet.population}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Planets;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,mCAAmC,CAAC;QACrEH,UAAU,CAACE,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC;MACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAEDL,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACfb,OAAO,CAACc,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzBnB,OAAA;MAAAY,QAAA,gBACEZ,OAAA;QAAAY,QAAA,EAAKM,MAAM,CAACE;MAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtBhB,OAAA;QAAAY,QAAA,GAAG,cAAY,EAACM,MAAM,CAACG,UAAU;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAF9BG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACd,EAAA,CA3BID,OAAO;AAAAqB,EAAA,GAAPrB,OAAO;AA6Bb,eAAeA,OAAO;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}